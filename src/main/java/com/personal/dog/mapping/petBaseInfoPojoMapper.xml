<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.personal.dog.dao.petBaseInfoPojoMapper" >
  <resultMap id="BaseResultMap" type="com.personal.util.pojo.PetBaseInfoPojo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ass_id" property="assId" jdbcType="BIGINT" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="text_type" property="textType" jdbcType="BIT" />
    <result column="effective" property="effective" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ass_id, text, text_type, effective, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pet_base_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pet_base_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.personal.util.pojo.PetBaseInfoPojo" >
    insert into pet_base_info (id, ass_id, text, 
      text_type, effective, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{assId,jdbcType=BIGINT}, #{text,jdbcType=VARCHAR}, 
      #{textType,jdbcType=BIT}, #{effective,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.personal.util.pojo.PetBaseInfoPojo" >
    insert into pet_base_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="assId != null" >
        ass_id,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="textType != null" >
        text_type,
      </if>
      <if test="effective != null" >
        effective,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="assId != null" >
        #{assId,jdbcType=BIGINT},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="textType != null" >
        #{textType,jdbcType=BIT},
      </if>
      <if test="effective != null" >
        #{effective,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.personal.util.pojo.PetBaseInfoPojo" >
    update pet_base_info
    <set >
      <if test="assId != null" >
        ass_id = #{assId,jdbcType=BIGINT},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="textType != null" >
        text_type = #{textType,jdbcType=BIT},
      </if>
      <if test="effective != null" >
        effective = #{effective,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.personal.util.pojo.PetBaseInfoPojo" >
    update pet_base_info
    set ass_id = #{assId,jdbcType=BIGINT},
      text = #{text,jdbcType=VARCHAR},
      text_type = #{textType,jdbcType=BIT},
      effective = #{effective,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>